name: vhs
on:
  workflow_dispatch:
    inputs:
      tape:
        description: 'Tape'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - demo.tape
          - new_package.tape
          - sync.tape

jobs:
  vhs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          cache-target: release

      - name: Setup Go
        uses: actions/setup-go@v6

      - name: Install VHS
        run: |
          sudo apt update
          sudo apt install -y ffmpeg ttyd
          go install github.com/charmbracelet/vhs@latest

      - name: Install komac
        run: cargo install --locked --path .

      - name: Recreate all VHS GIFs
        if: ${{ inputs.tape == 'all' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for tape in demo.tape new_package.tape sync.tape; do
            vhs "assets/vhs/$tape"
          done

      - name: Recreate specific VHS GIF
        if: ${{ inputs.tape != 'all' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: vhs "assets/vhs/${{ inputs.tape }}"

      - name: Set PR metadata
        id: prmeta
        run: |
          if [ "${{ inputs.tape }}" = "all" ]; then
            echo "title=Update all VHS GIFs" >> $GITHUB_OUTPUT
            echo "branch=update-all-gifs" >> $GITHUB_OUTPUT
            echo "body=This pull request updates all demo recordings." >> $GITHUB_OUTPUT
          else
            base="${TAPE%.tape}"
            echo "title=Update ${base}.gif" >> $GITHUB_OUTPUT
            echo "branch=update-${base}-gif" >> $GITHUB_OUTPUT
            echo "body=This pull request updates the ${base}.gif recording from assets/vhs/${TAPE}." >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: ${{ steps.prmeta.outputs.title }}
          branch: ${{ steps.prmeta.outputs.branch }}
          title: ${{ steps.prmeta.outputs.title }}
          body: ${{ steps.prmeta.outputs.body }}