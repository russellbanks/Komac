name: Release

on:
  workflow_run:
    workflows: [ "Cargo Build & Test" ]
    branches: [ main ]
    types:
      - completed
  release:
    types: [ released ]
  workflow_dispatch:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}

    name: Release - ${{ matrix.platform.target }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            inno_arch: x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            inno_arch: arm64

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - uses: moonrepo/setup-rust@v1
        with:
          targets: ${{ matrix.platform.target }}
          cache: false

      - name: Build binary
        shell: pwsh
        run: |
          $tool = if ("${{ matrix.platform.bins }}".Contains("cross")) { "cross" } else { "cargo" }
          & $tool build --target ${{ matrix.platform.target }} --release --locked

      - name: Rename binary
        id: rename_binary
        shell: pwsh
        run: |
          $bin = "komac.exe"
          $newName = "komac"
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_run') {
            $newName += "-nightly"
          } else {
            $newName += "-$($env:GITHUB_REF_NAME.TrimStart('v'))"
          }
          $newName += "-${{ matrix.platform.target }}.exe"
          Rename-Item -Path "target/${{ matrix.platform.target }}/release/$bin" -NewName "$newName"
          "name=$newName" >> $env:GITHUB_OUTPUT

      - name: Create Inno Installer
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/jrsoftware/issrc/main/Files/Languages/Unofficial/ChineseSimplified.isl" -OutFile "C:\Program Files (x86)\Inno Setup 6\Languages\ChineseSimplified.isl"
          $input = "../target/${{ matrix.platform.target }}/release/${{ steps.rename_binary.outputs.name }}"
          iscc.exe assets/installer.iss `
            /DInputExecutable=$input `
            /DArchitecture=${{ matrix.platform.inno_arch }} `
            /F$("${{ steps.rename_binary.outputs.name }}".Replace("komac", "komac-setup").TrimEnd(".exe"))

      - name: Compute SHA256 checksum
        shell: pwsh
        run: |
          Get-Item -ErrorAction SilentlyContinue -Path "target/${{ matrix.platform.target }}/release/*" -Include "komac-*.exe" | ForEach-Object {
            $FileHash = (Get-FileHash -Path $_.FullName -Algorithm SHA256).Hash.ToLower()
            New-Item -Force -ItemType File -Path $_.DirectoryName -Name "$($_.Name).sha256" -Value "$FileHash *$($_.Name)`n"
          }

      - name: Set Release variables
        id: set_release_vars
        shell: pwsh
        run: |
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_run') {
            "name=Nightly release" >> $env:GITHUB_OUTPUT
            "tag_name=nightly" >> $env:GITHUB_OUTPUT
            "prerelease=true" >> $env:GITHUB_OUTPUT
            "generate_release_notes=false" >> $env:GITHUB_OUTPUT
          } else {
            "prerelease=false" >> $env:GITHUB_OUTPUT
            "generate_release_notes=true" >> $env:GITHUB_OUTPUT
          }

      - name: Release binaries
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.set_release_vars.outputs.name }}
          tag_name: ${{ steps.set_release_vars.outputs.tag_name }}
          prerelease: ${{ steps.set_release_vars.outputs.prerelease }}
          generate_release_notes: ${{ steps.set_release_vars.outputs.generate_release_notes }}
          files: |
            target/${{ matrix.platform.target }}/release/${{ steps.rename_binary.outputs.name }}
            target/${{ matrix.platform.target }}/release/${{ steps.rename_binary.outputs.name }}.sha256
            assets/Output/*

